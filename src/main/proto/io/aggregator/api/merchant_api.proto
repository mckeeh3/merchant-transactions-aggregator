syntax = "proto3";

import "kalix/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "io/aggregator/entity/merchant_entity.proto";

package io.aggregator.api;

option java_outer_classname = "MerchantApi";

service Merchant {
  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "io.aggregator.entity.Merchant"
      entity_type: "merchant"
      state: "io.aggregator.entity.MerchantState"
      events: [
        "io.aggregator.entity.MerchantDayActivated",
        "io.aggregator.entity.MerchantPaymentRequested",
        "io.aggregator.entity.MerchantAggregationRequested"  //
      ]
    }
  };

  rpc ActivateDay(ActivateDayCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/merchant/activate-day"
      body: "*"
    };
  }

  rpc MerchantAggregationRequest(MerchantAggregationRequestCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/merchant/aggregation-request"
      body: "*"
    };
  }

  rpc MerchantPaymentRequest(MerchantPaymentRequestCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/merchant/payment-request"
      body: "*"
    };
  }

  rpc GetMerchant(GetMerchantRequest) returns (GetMerchantResponse) {
    option (google.api.http) = {
      get: "/merchant"
      body: "*"
    };
  }
}

message ActivateDayCommand {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  string service_code = 2 [(kalix.field).entity_key = true];
  string account_from = 3 [(kalix.field).entity_key = true];
  string account_to = 4 [(kalix.field).entity_key = true];
  int64 epoch_day = 5;
}

message MerchantAggregationRequestCommand {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  string service_code = 2 [(kalix.field).entity_key = true];
  string account_from = 3 [(kalix.field).entity_key = true];
  string account_to = 4 [(kalix.field).entity_key = true];
}

message MerchantPaymentRequestCommand {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  string service_code = 2 [(kalix.field).entity_key = true];
  string account_from = 3 [(kalix.field).entity_key = true];
  string account_to = 4 [(kalix.field).entity_key = true];
}

message GetMerchantRequest {
  string merchant_id = 1 [(kalix.field).entity_key = true];
  string service_code = 2 [(kalix.field).entity_key = true];
  string account_from = 3 [(kalix.field).entity_key = true];
  string account_to = 4 [(kalix.field).entity_key = true];
}

message GetMerchantResponse {
  entity.MerchantState merchant_state = 1;
}
